{"name":"PICrouter","tagline":"Communication between OSC and USB_MIDI/HID/CDC","body":"<div align=\"center\">\r\n<table>\r\n<tr>\r\n<th colspan=\"4\" align=\"center\">INDEX</th>\r\n</tr>\r\n<tr align=\"center\">\r\n  <td><a href=\"#how-to-buy\">How to Buy</a></td>\r\n  <td><a href=\"#licenses\">Licenses</a></td>\r\n  <td><a href=\"#specifications\">Specifications</a></td>\r\n  <td><a href=\"#pin-assign\">Pin Assign</a></td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <td><a href=\"#development\">Development</a></td>\r\n  <td><a href=\"#bootloader-application\">Bootloader App.</a></td>\r\n  <td><a href=\"#schematic-and-board-current-ver-is-100\">Sch & Brd Data</a></td>\r\n  <td><a href=\"#application-projects\">App. Projects</a></td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <td><a href=\"#tutorial-jp\">Tutorial (JP)</a></td>\r\n  <td><a href=\"#tutorial-en\">Tutorial (EN)</a></td>\r\n  <td><a href=\"#supported-osc-messages\">Supported OSC Msgs</a></td>\r\n  <td><a href=\"#supported-hid-commands\">Supported HID Cmds</a></td>\r\n</tr>\r\n</table>\r\n</div>\r\n\r\nPICrouter\r\n======\r\nPICrouter is a versatile and prototyping board specialized for [Open Sound Control].  \r\nThe main function is to communicate between OSC and USB-MIDI/HID/CDC.\r\n\r\nPICrouter will be an useful with the following purpose.\r\n\r\n* Develop an OSC/MIDI/HID/CDC controller for music or visual.\r\n* Study a PIC32 microcontroller.\r\n* Study a communication with usb and ethernet.\r\n* Study mruby programming(ONLY PIC32MX795F512H version)\r\n\r\nDemo\r\n* [Oto Devices Quick Demo][]\r\n* [PICrouter and MobMuPlat OSC Demo][]\r\n* [PICrouter and touchOSC Demo: PWM Control][]\r\n* [LED Step Sequencer Test with PICrouter and LED_PAD_16][]\r\n* [LED Intensity Control Test with PICrouter and LED_PAD_16][]\r\n* [Multiple LED_ENC_ABS_32 Control Test from PICrouter][]\r\n* [Intensity Control Test of RGB_PAD_16 from PICrouter][]\r\n* [RGB Step Sequencer Test][]\r\n\r\n[Open Sound Control]:http://opensoundcontrol.org\r\n\r\n[Oto Devices Quick Demo]:https://vimeo.com/67548325\r\n[PICrouter and MobMuPlat OSC Demo]:http://www.youtube.com/watch?v=xbNTXSsHR5w\r\n[PICrouter and touchOSC Demo: PWM Control]:http://www.youtube.com/watch?v=srX1inH3xIY\r\n[LED Step Sequencer Test with PICrouter and LED_PAD_16]: http://youtu.be/5rHGf42VQA8\r\n[LED Intensity Control Test with PICrouter and LED_PAD_16]: http://youtu.be/yXPXuEcpFhE\r\n[Multiple LED_ENC_ABS_32 Control Test from PICrouter]: http://youtu.be/imvcYX0qTLs\r\n[Intensity Control Test of RGB_PAD_16 from PICrouter]: https://vimeo.com/70006217\r\n[RGB Step Sequencer Test]: https://vimeo.com/73281314\r\n\r\n<div align=\"center\">\r\n<a href=\"http://www.flickr.com/photos/yamamo2/8369607593/\" title=\"PICrouter v1.0 TOP VIEW by tkrworks, on Flickr\"><img src=\"http://farm9.staticflickr.com/8214/8369607593_3c1b5055e1_z.jpg\" width=\"640\" height=\"206\" alt=\"PICrouter v1.0 TOP VIEW\"></a>  \r\n<a href=\"http://www.flickr.com/photos/yamamo2/8369762163/\" title=\"PICrouter v1.0 ETH/USB VIEW by tkrworks, on Flickr\"><img src=\"http://farm9.staticflickr.com/8219/8369762163_daa2bac802_z.jpg\" width=\"640\" height=\"346\" alt=\"PICrouter v1.0 ETH/USB VIEW\"></a>  \r\n</div>\r\n<div align=\"right\">\r\nPhotographed by Kiyasu/TechnikLAB*\r\n</div>\r\n\r\n<h2><a name=\"how-to-buy\">How to buy</a></h2>\r\nYou can buy the PICrouter on <a href=\"http://atelier.tkrworks.net/shop/index.php?main_page=product_info&cPath=2&products_id=29&language=en\">tkrworks online store</a> and <a href=\"http://www.switch-science.com/catalog/1338/\">SWITCH SCIENCE</a>.  \r\nThe price of product is 7350JPY.\r\n\r\n<h2><a name=\"licenses\">Licenses</a></h2>\r\nPICrouter is **Free Hardware** and **Free Software**.\r\n* Hardware : [Creative Commons Attribute-ShareAlike 3.0 Unported][cc-by-sa]  \r\n* Software : GNU General Public License version 3  \r\n\r\n[cc-by-sa]:http://creativecommons.org/licenses/by-sa/3.0/ \"Creative Commons Attribute-ShareAlike 3.0 Unported\"\r\n\r\n<h2><a name=\"specifications\">Specifications</a></h2>\r\n0. Supported mruby(ONLY PIC32MX795F512H version)\r\n1. Supported mDNS(Bonjour on Mac OS X), DHCP(both server and client).\r\n2. Supported Open Sound Control.\r\n3. Supported the multicast addresses(224.0.0.1 and 224.0.0.251).\r\n4. Supported USB dual role function(DEVICE:MIDI & HID composite / HOST:MIDI & CDC composite).\r\n5. Supported [USB HID bootloader][an1388] on Mac OS X and Windows.\r\n6. PIC32MX675F512H(Freq:80MHz / FLASH:512k / RAM:64k) / PIC32MX795F512H(Freq:80MHz / FLASH:512k / RAM:128k)\r\n7. A/D port x14\r\n8. PWM output x4\r\n9. SPI x2, I2C x3, UART x1, JTAG x1 and CAN x1\r\n10. 100mm x 33.5mm, 4-layers board\r\n\r\n[an1388]:http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1824&appnote=en554836\r\n\r\n<h2><a name=\"pin-assign\">Pin Assign</a></h2>\r\n<div align=\"center\">\r\n<a href=\"http://www.flickr.com/photos/yamamo2/8371181045/\" title=\"PICrouter v1.0 PIN ASSIGN by tkrworks, on Flickr\"><img src=\"http://farm9.staticflickr.com/8499/8371181045_ebda98c326_z.jpg\" width=\"465\" height=\"640\" alt=\"PICrouter v1.0 PIN ASSIGN\"></a>\r\n<a href=\"http://www.flickr.com/photos/yamamo2/8658610035/\" title=\"PICrouter v1.0 PIN ASSIGN by tkrworks, on Flickr\"><img src=\"http://farm9.staticflickr.com/8108/8658610035_d72ed7cd0a_z.jpg\" width=\"486\" height=\"640\" alt=\"PICrouter v1.0 PIN ASSIGN\"></a>\r\n</div>\r\n\r\n<h2><a name=\"development\">Development</a></h2>\r\n* Microchip [MPLABX] v2.00\r\n* Microchip [MPLAB XC32 Compiler] v1.22  \r\n  *To develop application, you can use free version.*\r\n\r\n[MPLABX]: http://www.microchip.com/pagehandler/en-us/family/mplabx/\r\n[MPLAB XC32 Compiler]: http://www.microchip.com/pagehandler/en_us/devtools/mplabxc/\r\n\r\n<h2><a name=\"bootloader-application\">Bootloader Application</a></h2>\r\n* PIC32UBL.exe (Win / Download is [here][an1388])\r\n* PIC32UBL.maxpat (Mac / See the readme.txt in the folder \"PICrouter/PIC32UBL_Max\")\r\n\r\n<h2><a name=\"schematic-and-board-current-ver-is-100\">Schematic and Board (current ver. is 1.00)</a></h2>\r\nPICrouter.sch and .brd are drawn by Eagel v6.  \r\nAdditionaly, we use [Sparkfun eagle library][sparkfun].  \r\nThis library is also licensed by CC by-SA 3.0.  \r\n\r\nAnd then We extend a special thank you to Tomoya(tomoya723) and Rundog(rundog).  \r\nTomoya gave many advices for designing of this board.  \r\nRundog assisted us with this board's production.\r\n\r\n\r\n[sparkfun]: http://www.opencircuits.com/SFE_Footprint_Library_Eagle\r\n\r\n<h2><a name=\"application-projects\">Application Projects</a></h2>\r\n#### PICrouter_HIDBL (current ver. is 1.1)  \r\n  PICrouter_HIDBL.X is the USB HID Bootloader project files.  \r\n  Look at [AN1388][] for details.  \r\n\r\n[AN1388]: http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1824&appnote=en554836 \"AN1388\"\r\n\r\n#### PICrouter (current ver. is 1.11.0) Updated 2013/11/18  \r\n  PICrouter is for Open Sound Control and USB Dual Role.  \r\n  PICrouter.X is this project folder.  \r\n  The Max6 demo patches are in Max_Demo_Patchexs folder.  \r\n  \r\n#### PICrouter for mruby (current ver. is 0.2.3) Updated 2014/02/22  \r\n  PICrouter for mruby supports mruby, Open Sound Control and USB Dual Role.  \r\n  PICrouter_795_mrb.X is this project folder.\r\n\r\n<h2><a name=\"tutorial-jp\">Tutorial (JP)</a></h2>\r\nTutorial 0 : [まずはじめに][]  \r\nTutorial 1 : [OSCを使ったデジタル入出力の制御][]  \r\nTutorial 2 : [OSCを使ったアナログ入力の制御][]  \r\nTutorial 3 : [OSCを使ったPWMの制御][]  \r\nTutorial 4 : [OSCを使ったSPIの制御][]  \r\nTutorial 5 : [システム設定の変更方法][]  \r\nTutorial 6 : [MIDIをOSCに変換する][]  \r\nTutorial 7 : [ファームウェアの書き換え][]  \r\nTutorial 8 : [LED_ENC_32をPICrouterからOSCで制御][]  \r\nTutorial 9 : [LED_ENC_ABS_32をPICrouterで制御][]  \r\nTutorial 10 : [LED_PAD_16をPICrouterからOSCで制御][]\r\n\r\n[まずはじめに]: https://github.com/tkrworks/PICrouter/wiki/まずはじめに\r\n[OSCを使ったデジタル入出力の制御]: https://github.com/tkrworks/PICrouter/wiki/OSCを使ったデジタル入出力の制御\r\n[OSCを使ったアナログ入力の制御]: https://github.com/tkrworks/PICrouter/wiki/OSCを使ったアナログ入力の制御\r\n[OSCを使ったPWMの制御]: https://github.com/tkrworks/PICrouter/wiki/OSCを使ったPWM出力の制御\r\n[OSCを使ったSPIの制御]: https://github.com/tkrworks/PICrouter/wiki/OSCを使ったSPIの制御\r\n[システム設定の変更方法]: https://github.com/tkrworks/PICrouter/wiki/システム設定の変更\r\n[MIDIをOSCに変換する]: https://github.com/tkrworks/PICrouter/wiki/MIDIをOSCに変換する\r\n[ファームウェアの書き換え]: https://github.com/tkrworks/PICrouter/wiki/ファームウェアの書き換え\r\n[LED_ENC_32をPICrouterからOSCで制御]: https://github.com/tkrworks/PICrouter/wiki/LED_ENC_32をPICrouterで制御\r\n[LED_ENC_ABS_32をPICrouterで制御]: https://github.com/tkrworks/PICrouter/wiki/LED_ENC_ABS_32をPICrouterで制御\r\n[LED_PAD_16をPICrouterからOSCで制御]: https://github.com/tkrworks/PICrouter/wiki/LED_PAD_16をPICrouterで制御\r\n\r\n<h2><a name=\"tutorial-en\">Tutorial (EN)</a></h2>\r\nTutorial 0 : [Introduction][]  \r\nTutorial 1 : [Digital IO Control with OSC][]  \r\nTutorial 2 : [Analog Input Control with OSC][]  \r\nTutorial 3 : [PWM Output Control with OSC][]  \r\nTutorial 4 : [SPI Configuration with OSC][]  \r\nTutorial 5 : [System Configuration with OSC][]  \r\nTutorial 6 : [OSC-MIDI Bridge][]  \r\nTutorial 7 : [Firmware Update][]  \r\nTutorial 8 : [Control LED_ENC_32 from PICrouter with OSC][]  \r\nTutorial 9 : [Control LED_ENC_ABS_32 from PICrouter][]  \r\nTutorial 10 : [Control LED_PAD_16 from PICrouter with OSC][]\r\n\r\n[Introduction]: https://github.com/tkrworks/PICrouter/wiki/Introduction\r\n[Digital IO Control with OSC]: https://github.com/tkrworks/PICrouter/wiki/Digital-IO-Control-with-OSC\r\n[Analog Input Control with OSC]: https://github.com/tkrworks/PICrouter/wiki/Analog-Input-Control-with-OSC\r\n[PWM Output Control with OSC]: https://github.com/tkrworks/PICrouter/wiki/PWM-Output-Control-with-OSC\r\n[SPI Configuration with OSC]: https://github.com/tkrworks/PICrouter/wiki/SPI-Configuration-with-OSC\r\n[System Configuration with OSC]: https://github.com/tkrworks/PICrouter/wiki/System-Configuration-with-OSC\r\n[OSC-MIDI Bridge]: https://github.com/tkrworks/PICrouter/wiki/OSC-MIDI-Bridge\r\n[firmware Update]: https://github.com/tkrworks/PICrouter/wiki/Firmware-Update\r\n[Control LED_ENC_32 from PICrouter with OSC]: https://github.com/tkrworks/PICrouter/wiki/Control-LED_ENC_32-from-PICrouter\r\n[Control LED_ENC_ABS_32 from PICrouter]: https://github.com/tkrworks/PICrouter/wiki/Control-LED_ENC_ABS_32-from-PICrouter\r\n[Control LED_PAD_16 from PICrouter with OSC]: https://github.com/tkrworks/PICrouter/wiki/Control-LED_PAD_16-from-PICrouter-with-OSC\r\n\r\n<h2><a name=\"supported-osc-messages\">Supported OSC Messages</a></h2>\r\nSee [osc pages][].\r\n\r\n[osc pages]: https://github.com/tkrworks/PICrouter/wiki/Supported-OSC-Messages\r\n\r\n<h2><a name=\"supported-hid-commands\">Supported HID Commands</a></h2>\r\nSee [hid pages][].\r\n\r\n[hid pages]: https://github.com/tkrworks/PICrouter/wiki/Supported-HID-Commands","google":"UA-43651989-1","note":"Don't delete this file! It's used internally to help with page regeneration."}